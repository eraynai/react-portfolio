/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 stats.gltf --transform 
Files: stats.gltf [10.4KB] > stats-transformed.glb [4.14KB] (60%)
Author: cig3d (https://sketchfab.com/cig3d)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/statistic-charts-with-arrow-86f9238bdaf44e098b6da4d82ee1861f
Title: Statistic Charts With Arrow
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";

export default function Model(props) {
  const { nodes, materials } = useGLTF("/stats-transformed.glb");
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.Cube_0.geometry}
        material={materials["Material.002"]}
        position={[-0.248, 0, 0]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={[0.324, 0.324, 0.279]}
      />
      <mesh
        geometry={nodes.Cube001_0.geometry}
        material={materials["Material.003"]}
        position={[0.607, 0, 0]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={[0.324, 0.324, 0.529]}
      />
      <mesh
        geometry={nodes.Cube002_0.geometry}
        material={materials["Material.004"]}
        position={[1.443, 0, 0]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={[0.324, 0.324, 0.779]}
      />
      <mesh
        geometry={nodes.Cube003_0.geometry}
        material={materials["Material.001"]}
        position={[-1.476, 0.211, 0.053]}
        rotation={[-Math.PI / 2, 0.57, 0]}
        scale={[0.089, 0.075, 0.576]}
      />
    </group>
  );
}

useGLTF.preload("/stats-transformed.glb");
